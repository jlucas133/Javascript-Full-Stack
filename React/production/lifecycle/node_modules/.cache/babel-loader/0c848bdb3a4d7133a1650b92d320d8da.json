{"ast":null,"code":"var _jsxFileName = \"/home/lucaslima/\\xC1rea de Trabalho/Arquivos/VSCode/React/production/lifecycle/src/components/planets/index.js\";\nimport Planet from './planet';\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getPlanets() {\n  let response = await fetch('http://localhost:3000/api/planets.json');\n  let data = await response.json();\n  return data;\n}\n\nconst clickOnPlanet = name => {\n  console.log(`Um click no Planeta: ${name}`);\n};\n\nclass Planets extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.removeLast = () => {\n      let new_planets = [...this.state.planets];\n      new_planets.pop();\n      this.setState(state => ({\n        planets: new_planets\n      }));\n    };\n\n    this.duplicateLastPlanet = () => {\n      let last_planet = this.state.planets[this.state.planets.length - 1];\n      this.setState(state => ({\n        planets: [...this.state.planets, last_planet]\n      }));\n    };\n\n    this.state = {\n      planets: []\n    };\n  }\n\n  componentDidMount() {\n    // quando o componente for montado vai chamar um método e esse método vai extrair os dados da API\n    getPlanets().then(data => {\n      this.setState(state => ({\n        planets: data['planets']\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Planet List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.removeLast,\n        children: \"Remove Last!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.duplicateLastPlanet,\n        children: \"Duplicate Last!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), this.state.planets.map(planet => /*#__PURE__*/_jsxDEV(Planet, {\n        name: planet.name,\n        description: planet.description,\n        link: planet.link,\n        img_url: planet.img_url,\n        clickOnPlanet: planet.clickOnPlanet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Planets;","map":{"version":3,"sources":["/home/lucaslima/Área de Trabalho/Arquivos/VSCode/React/production/lifecycle/src/components/planets/index.js"],"names":["Planet","React","Fragment","getPlanets","response","fetch","data","json","clickOnPlanet","name","console","log","Planets","Component","constructor","props","removeLast","new_planets","state","planets","pop","setState","duplicateLastPlanet","last_planet","length","componentDidMount","then","render","map","planet","description","link","img_url"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAeC,UAAf,GAA2B;AACvB,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAA1B;AACA,MAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,SAAOD,IAAP;AACH;;AAKD,MAAME,aAAa,GAAIC,IAAD,IAAU;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBF,IAAK,EAAzC;AACH,CAFD;;AAIA,MAAMG,OAAN,SAAsBX,KAAK,CAACY,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,UAlBmB,GAkBN,MAAM;AACf,UAAIC,WAAW,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,OAAf,CAAlB;AACAF,MAAAA,WAAW,CAACG,GAAZ;AACA,WAAKC,QAAL,CAAcH,KAAK,KAAI;AACnBC,QAAAA,OAAO,EAAEF;AADU,OAAJ,CAAnB;AAGH,KAxBkB;;AAAA,SA0BnBK,mBA1BmB,GA0BG,MAAK;AACvB,UAAIC,WAAW,GAAG,KAAKL,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWC,OAAX,CAAmBK,MAAnB,GAA4B,CAA/C,CAAlB;AACA,WAAKH,QAAL,CAAcH,KAAK,KAAI;AACnBC,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,EAAwBI,WAAxB;AADU,OAAJ,CAAnB;AAGH,KA/BkB;;AAEf,SAAKL,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAIH;;AAIDM,EAAAA,iBAAiB,GAAE;AAAW;AAC1BtB,IAAAA,UAAU,GAAGuB,IAAb,CAAkBpB,IAAI,IAAG;AACrB,WAAKe,QAAL,CAAcH,KAAK,KAAI;AACnBC,QAAAA,OAAO,EAAEb,IAAI,CAAC,SAAD;AADM,OAAJ,CAAnB;AAGH,KAJD;AAKH;;AAiBDqB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKX,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKM,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMK,KAAKJ,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAwBC,MAAD,iBACpB,QAAC,MAAD;AACI,QAAA,IAAI,EAAEA,MAAM,CAACpB,IADjB;AAEI,QAAA,WAAW,EAAEoB,MAAM,CAACC,WAFxB;AAGI,QAAA,IAAI,EAAED,MAAM,CAACE,IAHjB;AAII,QAAA,OAAO,EAAEF,MAAM,CAACG,OAJpB;AAKI,QAAA,aAAa,EAAEH,MAAM,CAACrB;AAL1B;AAAA;AAAA;AAAA;AAAA,cADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAtDiC;;AAyDtC,eAAeI,OAAf","sourcesContent":["import Planet from './planet';\nimport React, { Fragment } from 'react';\n\nasync function getPlanets(){\n    let response = await fetch('http://localhost:3000/api/planets.json')\n    let data = await response.json()\n    return data;\n}\n\n\n\n\nconst clickOnPlanet = (name) => {\n    console.log(`Um click no Planeta: ${name}`)\n}\n\nclass Planets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            planets: []\n\n        }\n    }\n\n\n\n    componentDidMount(){          // quando o componente for montado vai chamar um método e esse método vai extrair os dados da API\n        getPlanets().then(data =>{\n            this.setState(state =>({\n                planets: data['planets']\n            }))\n        })\n    }\n\n    removeLast = () => {\n        let new_planets = [...this.state.planets]\n        new_planets.pop()\n        this.setState(state =>({\n            planets: new_planets\n        }))\n    }\n\n    duplicateLastPlanet = () =>{\n        let last_planet = this.state.planets[this.state.planets.length - 1]\n        this.setState(state =>({\n            planets: [...this.state.planets, last_planet]\n        }))\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h3>Planet List</h3>\n                <button onClick={this.removeLast}>Remove Last!</button>\n                <button onClick={this.duplicateLastPlanet}>Duplicate Last!</button>\n                <hr />\n\n                {this.state.planets.map((planet) =>\n                    <Planet\n                        name={planet.name}\n                        description={planet.description}\n                        link={planet.link}\n                        img_url={planet.img_url}\n                        clickOnPlanet={planet.clickOnPlanet}\n                    />\n                )}\n\n            </Fragment >\n        )\n    }\n}\n\nexport default Planets;"]},"metadata":{},"sourceType":"module"}