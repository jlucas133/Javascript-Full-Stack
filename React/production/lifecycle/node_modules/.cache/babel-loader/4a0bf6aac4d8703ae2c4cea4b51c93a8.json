{"ast":null,"code":"var _jsxFileName = \"/home/lucaslima/\\xC1rea de Trabalho/Arquivos/VSCode/React/production/lifecycle/src/components/planets/index.js\";\nimport Planet from './planet';\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getPlanets() {\n  let response = await fetch('http://localhost:3000/api/planets.json');\n  let data = await response.json();\n  return data;\n}\n\nclass Planets extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.removeLast = () => {\n      let new_planets = [...this.state.planets];\n      new_planets.pop();\n      this.setState(state => ({\n        planets: new_planets\n      }));\n    };\n\n    this.duplicateLastPlanet = () => {\n      let last_planet = this.state.planets[this.state.planets.length - 1];\n      this.setState(state => ({\n        planets: [...this.state.planets, last_planet]\n      }));\n    };\n\n    this.state = {\n      planets: []\n      /*{\n          name: \"Mercúrio\",\n          description: \"Mercúrio é o menor[nota 1][nota 2] e mais interno planeta do Sistema Solar, orbitando o Sol a cada 87,969 dias terrestres. A sua órbita tem a maior excentricidade e o seu eixo apresenta a menor inclinação em relação ao plano da órbita dentre todos os planetas do Sistema Solar. Mercúrio completa três rotações em torno de seu eixo a cada duas órbitas. \",\n          link: \"https://pt.wikipedia.org/wiki/Merc%C3%BArio_(planeta)\",\n          img_url: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Mercury_in_color_-_Prockter07-edit1.jpg/280px-Mercury_in_color_-_Prockter07-edit1.jpg\"\n      },\n       {\n          name: \"Plutão\",\n          description: \"Plutão, formalmente designado 134340 Plutão, é um planeta anão do Sistema Solar e o nono maior e décimo mais massivo objeto observado diretamente orbitando o Sol. Originalmente classificado como um planeta, Plutão é atualmente o maior membro conhecido do cinturão de Kuiper,[12] uma região de corpos além da órbita de Netuno.\",\n          link: \"https://pt.wikipedia.org/wiki/Plut%C3%A3o\",\n          img_url: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Pluto_in_True_Color_-_High-Res.jpg/280px-Pluto_in_True_Color_-_High-Res.jpg\"\n       }\n                  ]*/\n\n    };\n  }\n\n  componentDidMount() {\n    // quando o componente for montado vai chamar um método e esse método vai extrair os dados da API\n    getPlanets().then(data => {\n      this.setState(state => ({\n        planets: data['planets']\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Planet List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.removeLast,\n        children: \"Remove Last!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.duplicateLastPlanet,\n        children: \"Duplicate Last!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), this.state.planets.map(planet => /*#__PURE__*/_jsxDEV(Planet, {\n        name: planet.name,\n        description: planet.description,\n        link: planet.link,\n        img_url: planet.img_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Planets;","map":{"version":3,"sources":["/home/lucaslima/Área de Trabalho/Arquivos/VSCode/React/production/lifecycle/src/components/planets/index.js"],"names":["Planet","React","Fragment","getPlanets","response","fetch","data","json","Planets","Component","constructor","props","removeLast","new_planets","state","planets","pop","setState","duplicateLastPlanet","last_planet","length","componentDidMount","then","render","map","planet","name","description","link","img_url"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAeC,UAAf,GAA2B;AACvB,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAA1B;AACA,MAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,SAAOD,IAAP;AACH;;AAGD,MAAME,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,UA/BmB,GA+BN,MAAM;AACf,UAAIC,WAAW,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,OAAf,CAAlB;AACAF,MAAAA,WAAW,CAACG,GAAZ;AACA,WAAKC,QAAL,CAAcH,KAAK,KAAI;AACnBC,QAAAA,OAAO,EAAEF;AADU,OAAJ,CAAnB;AAGH,KArCkB;;AAAA,SAuCnBK,mBAvCmB,GAuCG,MAAK;AACvB,UAAIC,WAAW,GAAG,KAAKL,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWC,OAAX,CAAmBK,MAAnB,GAA4B,CAA/C,CAAlB;AACA,WAAKH,QAAL,CAAcH,KAAK,KAAI;AACnBC,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,EAAwBI,WAAxB;AADU,OAAJ,CAAnB;AAGH,KA5CkB;;AAEf,SAAKL,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdqB,KAAb;AAoBH;;AACDM,EAAAA,iBAAiB,GAAE;AAAW;AAC1BlB,IAAAA,UAAU,GAAGmB,IAAb,CAAkBhB,IAAI,IAAG;AACrB,WAAKW,QAAL,CAAcH,KAAK,KAAI;AACnBC,QAAAA,OAAO,EAAET,IAAI,CAAC,SAAD;AADM,OAAJ,CAAnB;AAGH,KAJD;AAKH;;AAiBDiB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKX,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKM,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMK,KAAKJ,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAwBC,MAAD,iBACpB,QAAC,MAAD;AACI,QAAA,IAAI,EAAEA,MAAM,CAACC,IADjB;AAEI,QAAA,WAAW,EAAED,MAAM,CAACE,WAFxB;AAGI,QAAA,IAAI,EAAEF,MAAM,CAACG,IAHjB;AAII,QAAA,OAAO,EAAEH,MAAM,CAACI;AAJpB;AAAA;AAAA;AAAA;AAAA,cADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAlEiC;;AAqEtC,eAAerB,OAAf","sourcesContent":["import Planet from './planet';\nimport React, { Fragment } from 'react';\n\nasync function getPlanets(){\n    let response = await fetch('http://localhost:3000/api/planets.json')\n    let data = await response.json()\n    return data;\n}\n\n\nclass Planets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            planets: []\n                /*{\n                    name: \"Mercúrio\",\n                    description: \"Mercúrio é o menor[nota 1][nota 2] e mais interno planeta do Sistema Solar, orbitando o Sol a cada 87,969 dias terrestres. A sua órbita tem a maior excentricidade e o seu eixo apresenta a menor inclinação em relação ao plano da órbita dentre todos os planetas do Sistema Solar. Mercúrio completa três rotações em torno de seu eixo a cada duas órbitas. \",\n                    link: \"https://pt.wikipedia.org/wiki/Merc%C3%BArio_(planeta)\",\n                    img_url: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Mercury_in_color_-_Prockter07-edit1.jpg/280px-Mercury_in_color_-_Prockter07-edit1.jpg\"\n                },\n\n                {\n                    name: \"Plutão\",\n                    description: \"Plutão, formalmente designado 134340 Plutão, é um planeta anão do Sistema Solar e o nono maior e décimo mais massivo objeto observado diretamente orbitando o Sol. Originalmente classificado como um planeta, Plutão é atualmente o maior membro conhecido do cinturão de Kuiper,[12] uma região de corpos além da órbita de Netuno.\",\n                    link: \"https://pt.wikipedia.org/wiki/Plut%C3%A3o\",\n                    img_url: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Pluto_in_True_Color_-_High-Res.jpg/280px-Pluto_in_True_Color_-_High-Res.jpg\"\n\n                }\n              \n             ]*/\n\n        }\n    }\n    componentDidMount(){          // quando o componente for montado vai chamar um método e esse método vai extrair os dados da API\n        getPlanets().then(data =>{\n            this.setState(state =>({\n                planets: data['planets']\n            }))\n        })\n    }\n\n    removeLast = () => {\n        let new_planets = [...this.state.planets]\n        new_planets.pop()\n        this.setState(state =>({\n            planets: new_planets\n        }))\n    }\n\n    duplicateLastPlanet = () =>{\n        let last_planet = this.state.planets[this.state.planets.length - 1]\n        this.setState(state =>({\n            planets: [...this.state.planets, last_planet]\n        }))\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h3>Planet List</h3>\n                <button onClick={this.removeLast}>Remove Last!</button>\n                <button onClick={this.duplicateLastPlanet}>Duplicate Last!</button>\n                <hr />\n\n                {this.state.planets.map((planet) =>\n                    <Planet\n                        name={planet.name}\n                        description={planet.description}\n                        link={planet.link}\n                        img_url={planet.img_url}\n                    />\n                )}\n\n            </Fragment >\n        )\n    }\n}\n\nexport default Planets;"]},"metadata":{},"sourceType":"module"}